{"version":3,"sources":["components/HomePage.tsx","context/DataProvider.tsx","api/api.ts","components/NewPerson.tsx","components/PersonName.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","DataContext","React","createContext","DataProvider","children","useState","peopleList","setPeopleList","contextValue","useMemo","useEffect","fetch","then","response","json","data","Provider","value","personObj","born","died","fatherName","motherName","name","sex","slug","personObjError","NewPerson","navigate","useNavigate","params","useOutletContext","useContext","year","Date","getFullYear","formPerson","setFormPerson","errorForm","setErrorForm","males","filter","male","females","female","handleChange","e","currentTarget","prev","className","type","onClick","onSubmit","preventDefault","trim","length","toLowerCase","htmlFor","id","onChange","checked","disabled","map","person","PersonName","memo","location","useLocation","style","color","textDecoration","to","pathname","search","PersonRow","personSlug","useParams","father","find","vater","mother","mutter","backgroundColor","PeopleTable","people","setSortParam","setSortOrder","sortOrderParam","setSortOrderParam","sortName","setSortName","changeSortOrder","classNames","PeoplePage","saveSearch","setSaveSearch","useSearchParams","setSearch","queryName","get","querySort","querySortOrder","filtredList","searchParams","toLocaleLowerCase","sortParams","filterPople","includes","sort","a","b","localeCompare","filterList","set","target","delete","context","App","isActive","element","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f6fbe61.chunk.js","sourcesContent":["const HomePage = () => {\n  return (\n    <h1>HomePage</h1>\n  );\n};\n\nexport default HomePage;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { fetchPeople } from '../api/api';\nimport { Person } from '../types/Person';\n\ntype ContextProps = {\n  peopleList: Person[];\n  setPeopleList: (people: Person[]) => void\n};\n\nexport const DataContext = React.createContext({} as ContextProps);\n\nconst DataProvider: React.FC = ({ children }) => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n\n  const contextValue = useMemo(() => {\n    return {\n      peopleList,\n      setPeopleList,\n    };\n  }, [peopleList]);\n\n  useEffect(() => {\n    fetchPeople()\n      .then(data => setPeopleList(data));\n  }, []);\n\n  return (\n    <DataContext.Provider\n      value={contextValue}\n    >\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nexport default DataProvider;\n","const BASE_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function fetchPeople() {\n  return fetch(BASE_URL)\n    .then(response => response.json());\n}\n","import React, { useContext, useState } from 'react';\nimport { useNavigate, useOutletContext } from 'react-router-dom';\nimport { DataContext } from '../context/DataProvider';\nimport './NewPerson.scss';\n\nconst personObj = {\n  born: 0,\n  died: 0,\n  fatherName: '',\n  motherName: '',\n  name: '',\n  sex: '',\n  slug: '',\n};\n\nconst personObjError = {\n  born: '',\n  died: '',\n  name: '',\n  sex: '',\n};\n\nconst NewPerson: React.FC = () => {\n  const navigate = useNavigate();\n  const params = useOutletContext();\n  const { peopleList, setPeopleList } = useContext(DataContext);\n  const year = new Date().getFullYear();\n  const [formPerson, setFormPerson] = useState(personObj);\n  const [errorForm, setErrorForm] = useState(personObjError);\n\n  const males = peopleList.filter(male => male.sex === 'm'\n  && +male.born > +formPerson.born + 18\n  && +male.died > +formPerson.died);\n  const females = peopleList.filter(female => female.sex === 'f'\n  && +female.born > +formPerson.born + 18\n  && +female.died > +formPerson.died);\n\n  function handleChange(\n    e: React.ChangeEvent<HTMLInputElement & HTMLSelectElement>,\n  ) {\n    const { name, value } = e.currentTarget;\n\n    setFormPerson(prev => ({\n      ...prev,\n      [name]: name === 'born' || name === 'died' ? +value : value,\n    }));\n\n    setErrorForm(personObjError);\n  }\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    if (formPerson.name.trim().length < 5) {\n      setErrorForm(prev => ({\n        ...prev,\n        name: 'Enter person name!',\n      }));\n\n      return;\n    }\n\n    if (!formPerson.sex) {\n      setErrorForm(prev => ({\n        ...prev,\n        sex: 'Choose sex!',\n      }));\n\n      return;\n    }\n\n    if (!formPerson.born\n      || +formPerson.born < 1400 || +formPerson.born > year) {\n      setErrorForm(prev => ({\n        ...prev,\n        born: 'Type correct date of birth!',\n      }));\n\n      return;\n    }\n\n    if (!formPerson.died\n      || +formPerson.died < +formPerson.born\n      || +formPerson.died + 150 < +formPerson.born) {\n      setErrorForm(prev => ({\n        ...prev,\n        died: 'Type correct date of death max age 150!',\n      }));\n\n      return;\n    }\n\n    setFormPerson(prev => ({\n      ...prev,\n      slug: `${formPerson.name.toLowerCase()}-${formPerson.born}`,\n    }));\n\n    setPeopleList([...peopleList, formPerson]);\n\n    setErrorForm(personObjError);\n    setFormPerson(personObj);\n    navigate(`/peoplePage${params}`);\n  }\n\n  return (\n    <div className=\"NewPerson\">\n      <div className=\"NewPerson__container\">\n        <h2>Add new person</h2>\n        <button className=\"NewPerson__btn\" type=\"button\" onClick={() => navigate(`/peoplePage${params}`)}>X</button>\n        <form onSubmit={handleSubmit} className=\"NewPerson__form\">\n          <label htmlFor=\"name\">\n            Name\n          </label>\n          <input\n            className=\"NewPerson__input\"\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formPerson.name}\n            onChange={handleChange}\n          />\n          <span className=\"NewPerson__error\">{errorForm.name}</span>\n          <div className=\"NewPerson__section NewPerson__section--Sex\">\n            <div>Sex</div>\n            <label htmlFor=\"female\">Female</label>\n            <input\n              type=\"radio\"\n              id=\"female\"\n              name=\"sex\"\n              value=\"f\"\n              onChange={handleChange}\n              checked={formPerson.sex === 'f'}\n            />\n            <label htmlFor=\"male\">Male</label>\n            <input\n              type=\"radio\"\n              id=\"male\"\n              name=\"sex\"\n              value=\"m\"\n              onChange={handleChange}\n              checked={formPerson.sex === 'm'}\n            />\n            <span className=\"NewPerson__error\">{errorForm.sex}</span>\n          </div>\n          <div className=\"NewPerson__section NewPerson__section--born\">\n            <label htmlFor=\"born\">{`Birth year 1400-${year}`}</label>\n            <input\n              className=\"NewPerson__input\"\n              type=\"number\"\n              id=\"born\"\n              name=\"born\"\n              value={formPerson.born || ''}\n              onChange={handleChange}\n            />\n            <span className=\"NewPerson__error\">{errorForm.born}</span>\n            <label htmlFor=\"death\">Death year</label>\n            <input\n              className=\"NewPerson__input\"\n              type=\"number\"\n              id=\"death\"\n              name=\"died\"\n              value={formPerson.died || ''}\n              onChange={handleChange}\n              disabled={!formPerson.born}\n            />\n            <span className=\"NewPerson__error\">{errorForm.died}</span>\n          </div>\n          <div className=\"NewPerson__section NewPerson__section--parents\">\n            <p>Select parents</p>\n            <select\n              disabled={!formPerson.born}\n              name=\"fatherName\"\n              value={formPerson.fatherName}\n              onChange={handleChange}\n            >\n              <option>Choose father</option>\n              {males.map(person => (\n                <option\n                  key={person.slug}\n                  value={person.name}\n                >\n                  {person.name}\n                </option>\n              ))}\n            </select>\n            <select\n              disabled={!formPerson.born}\n              name=\"motherName\"\n              value={formPerson.motherName}\n              onChange={handleChange}\n            >\n              <option>Choose mother</option>\n              {females.map(person => (\n                <option\n                  key={person.slug}\n                  value={person.name}\n                >\n                  {person.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <button\n            className=\"NewPerson__button\"\n            type=\"submit\"\n          >\n            Add person\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default NewPerson;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person\n};\n\nconst PersonName: React.FC<Props> = React.memo(({ person }) => {\n  const location = useLocation();\n\n  return (\n    <Link\n      style={person.sex === 'm' ? {\n        color: 'rgb(0, 71, 171)',\n        textDecoration: 'none',\n      }\n        : {\n          color: 'rgb(255, 0, 0)',\n          textDecoration: 'none',\n        }}\n      to={{\n        pathname: `/peoplePage/${person.slug}`,\n        search: location.search,\n      }}\n    >\n      {person.name}\n    </Link>\n  );\n});\n\nexport default PersonName;\n","import { useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { DataContext } from '../context/DataProvider';\nimport { Person } from '../types/Person';\nimport PersonName from './PersonName';\n\ntype Props = {\n  person: Person\n};\n\nconst PersonRow: React.FC<Props> = ({ person }) => {\n  const { personSlug } = useParams();\n  const { peopleList } = useContext(DataContext);\n\n  const father = peopleList.find(vater => vater.name === person.fatherName);\n  const mother = peopleList.find(mutter => mutter.name === person.motherName);\n\n  return (\n    <tr style={person.slug === personSlug ? { backgroundColor: '#aed6f1' }\n      : { backgroundColor: 'white' }}\n    >\n      <td>\n        <PersonName person={person} />\n      </td>\n      <td>\n        {person.sex}\n      </td>\n      <td>\n        {person.born}\n      </td>\n      <td>\n        {person.died}\n      </td>\n      <td>\n        {father\n          ? <PersonName person={father} />\n          : person.fatherName || '-'}\n      </td>\n      <td>\n        {mother\n          ? <PersonName person={mother} />\n          : person.motherName || '-'}\n      </td>\n    </tr>\n  );\n};\n\nexport default PersonRow;\n","import classNames from 'classnames';\nimport { useState } from 'react';\nimport { Person } from '../types/Person';\nimport PersonRow from './PersonRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[];\n  setSortParam: (value: string) => void;\n  setSortOrder: (value: string) => void;\n};\n\nconst PeopleTable: React.FC<Props> = ({\n  people,\n  setSortParam,\n  setSortOrder,\n}) => {\n  const [sortOrderParam, setSortOrderParam] = useState('asc');\n  const [sortName, setSortName] = useState('');\n\n  function changeSortOrder(name: string) {\n    setSortOrderParam(sortOrderParam === 'asc' ? 'desc' : 'asc');\n    setSortOrder(sortOrderParam);\n    setSortName(name);\n    setSortParam(name);\n  }\n\n  return (\n    <div className=\"\">\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr>\n            <th\n              onClick={() => changeSortOrder('name')}\n              className={classNames('Table__sort', {\n                'Table__sort--asc': sortName === 'name'\n                && sortOrderParam === 'asc',\n                'Table__sort--desc': sortName === 'name'\n                && sortOrderParam === 'desc',\n              })}\n            >\n              Name\n            </th>\n            <th\n              onClick={() => changeSortOrder('sex')}\n              className={classNames('Table__sort', {\n                'Table__sort--asc': sortName === 'sex'\n                && sortOrderParam === 'asc',\n                'Table__sort--desc': sortName === 'sex'\n                && sortOrderParam === 'desc',\n              })}\n            >\n              Sex\n            </th>\n            <th\n              onClick={() => changeSortOrder('born')}\n              className={classNames('Table__sort', {\n                'Table__sort--asc': sortName === 'born'\n                && sortOrderParam === 'asc',\n                'Table__sort--desc': sortName === 'born'\n                && sortOrderParam === 'desc',\n              })}\n            >\n              Born\n            </th>\n            <th\n              onClick={() => changeSortOrder('died')}\n              className={classNames('Table__sort', {\n                'Table__sort--asc': sortName === 'died'\n                && sortOrderParam === 'asc',\n                'Table__sort--desc': sortName === 'died'\n                && sortOrderParam === 'desc',\n              })}\n            >\n              Died\n            </th>\n            <th>\n              Mother\n            </th>\n            <th>\n              Father\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => (\n            <PersonRow\n              key={person.slug}\n              person={person}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PeopleTable;\n","import './PeoplePage.scss';\nimport { useContext, useEffect, useState } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport PeopleTable from './PeopleTable';\nimport { DataContext } from '../context/DataProvider';\n\nconst PeoplePage = () => {\n  const [saveSearch, setSaveSearch] = useState('');\n  const [search, setSearch] = useSearchParams();\n  const { peopleList } = useContext(DataContext);\n  const location = useLocation();\n  const queryName = search.get('query') || '';\n  const querySort = search.get('sortBy') || '';\n  const querySortOrder = search.get('sortOrder') || 'asc';\n\n  useEffect(() => {\n    if (location.search) {\n      setSaveSearch(location.search);\n    }\n  });\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    search.set('query', e.target.value);\n    setSearch(search);\n    if (e.target.value === '') {\n      search.delete('query');\n      setSearch(search);\n    }\n  }\n\n  function filterList() {\n    const searchParams = queryName.toLocaleLowerCase();\n    const sortParams = querySort;\n\n    const filterPople = peopleList?.filter(person => person.name\n      .toLowerCase().includes(searchParams));\n\n    if (!sortParams) {\n      return filterPople;\n    }\n\n    if (sortParams === 'name' || sortParams === 'sex') {\n      filterPople?.sort((a, b) => (\n        querySortOrder === 'asc'\n          ? a[sortParams].localeCompare(b[sortParams])\n          : b[sortParams].localeCompare(a[sortParams])\n      ));\n    }\n\n    if (sortParams === 'born' || sortParams === 'died') {\n      filterPople?.sort((a, b) => (\n        querySortOrder === 'asc'\n          ? a[sortParams] - b[sortParams]\n          : b[sortParams] - a[sortParams]\n      ));\n    }\n\n    return filterPople;\n  }\n\n  const filtredList = filterList();\n\n  function setSortParam(value: string) {\n    search.set('sortBy', value);\n    setSearch(search);\n    if (value === '') {\n      search.delete('sortBy');\n      setSearch(search);\n    }\n  }\n\n  function setSortOrder(value: string) {\n    search.set('sortOrder', value);\n    setSearch(search);\n  }\n\n  return (\n    <div>\n      <label htmlFor=\"query\">\n        Search\n      </label>\n      <input\n        value={queryName}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"query\"\n        id=\"query\"\n        data-cy=\"filterInput\"\n      />\n      <NavLink\n        to=\"/peoplePage/new\"\n      >\n        <button type=\"button\">Add person</button>\n      </NavLink>\n      {filtredList\n      && (\n        <PeopleTable\n          people={filtredList}\n          // eslint-disable-next-line\n          setSortParam={setSortParam}\n          // eslint-disable-next-line\n          setSortOrder={setSortOrder}\n        />\n      )}\n      <Outlet context={saveSearch} />\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\nimport {\n  BrowserRouter,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport HomePage from './components/HomePage';\nimport NewPerson from './components/NewPerson';\nimport PeoplePage from './components/PeoplePage';\nimport DataProvider from './context/DataProvider';\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <h1>People table</h1>\n    <nav className=\"navbar\">\n      <NavLink\n        to=\"/\"\n        // eslint-disable-next-line\n        className={({ isActive }) =>\n        // eslint-disable-next-line\n          isActive ? 'navbar__link--active' : 'navbar__link'}\n      >\n        Home Page\n      </NavLink>\n      <NavLink\n      // eslint-disable-next-line\n        className={({ isActive }) =>\n        // eslint-disable-next-line\n          isActive ? 'navbar__link--active' : 'navbar__link'}\n        to=\"/peoplePage\"\n      >\n        People Page\n      </NavLink>\n    </nav>\n    <DataProvider>\n      <Routes>\n        <Route\n          element={<HomePage />}\n          path=\"/\"\n        />\n        <Route\n          element={<PeoplePage />}\n          path=\"/peoplePage\"\n        >\n          <Route\n            element={<NewPerson />}\n            path=\"new\"\n          />\n        </Route>\n        <Route\n          element={<PeoplePage />}\n          path=\"/peoplePage/:personSlug\"\n        />\n      </Routes>\n    </DataProvider>\n  </BrowserRouter>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}